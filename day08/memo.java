package day08;

public class memo {/*
OOP
Object

Class(설계도)
- 변수(속성)
- 메소드(기능)

#class는 설계도 object는 찍어낸 애(실체화된 애, (메모리에 할당된)인스턴스된 애)


// 클래스의 구성 요소
// 1. member 변수, 필드
// 2. constructor
// 3. member method

생성자(constructor) : 클래스명과 동일한 이름을 갖는 메서드
1. 클래스명과 동일한 이름을 갖는 메서드
2. 객체의 초기화를 담당
3. 리턴값이 없지만, void 키워드를 사용하지 않는다.
void를 붙이면 생성자가 아니라 일반 메서드


// 없어도 기본값으로 실행됨. (생성자 없어도 JVM이 한개의 생성자는 있다고 생성해줌)
// 생성자가 따로 없다면 매개변수 없는 생성자(기본생성자)가 1개 존재하는 것으로 처리해준다.
 * 
 * 
수업 정리(선생님 정리 + a)
Object => OOP


class  : 개념적으로 존재하는 (설계도 같은 애)
object : 실체화 된 애(인스턴스화 된, 메모리에 할당된)

object:(객체의 속성, 특징, 행위, 동작 등등...) -> class(멤버 변수, 멤버 메서드)

클래스명 참조변수(만들거) = new(메모리에 할당해주는 operator) 생성자

클래스명 참조변수 = new 생성자();		// 이것도 생성자였어!

참조변수.멤버변수
참조변수.멤버메서드명();


생성자 ==> 객체를 초기화 할 목적으로 가지고 있는 메서드 
생성자가 1개도 없으면  ==> 기본생성자는 존재하는 것으로 처리 

기본생성자 ==> 멤버변수의 기본값  




*/
}
