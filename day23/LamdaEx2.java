package day23;
// 람다식 특징
// 문법
// (매개변수 목록) -> { 실행문 }

// 장점
// 1. 코드를 간결하게 만들 수 있다.
// 2. 코드가 간결하고 식에 개발자의 의도가 명확히 드러나므로 가독성이 향상됩니당
// 3. 함수(메서드)를 만드는 과정없이 한번에 처리할 수 있기에 코딩하는 시간이 줄어든다.
// 4. 병렬프로그램이 용이하다.

// 단점
// 1. 익명함수는 재사용이 불가능하다.
// 2. 디버깅이 다소 까다롭다.
// 3. 람다를 남발하면 코드가 지저분해진다. (비슷한 코드의 중복 가능성 높음)
// 4. 재귀로 만들 경우에는 다소 부족한 면이 있다.

// 나의 생각 : 한 두번만 사용될 것으로 예상될때, 간단한 문제를 해결하는 곳에만 쓰자

interface Calculator1{
	int cal(int a, int b);
}

public class LamdaEx2 {
	public static void main(String[] args) {
		Calculator1 c;
		c = (a, b) -> { return a+b; };
		System.out.println(c.cal(100,  200));
	}
}
